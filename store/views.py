import json
from pydoc import locate
import random
from django.forms import model_to_dict
from django.http import JsonResponse
from django.contrib.auth.models import User
from django.contrib.auth import authenticate, login, logout
from django.core.mail import send_mail
from store.models import document, loc
from django.db.models import Q

# Create your views here.

def register(request):
    if(request.method=="POST"):
        body=json.loads(request.body)
        x=User.objects.filter(Q(username=body['user']) | Q(email=body['mail']))
        if(x.exists()):
            msg={'msg':'Username already exist'}
            return JsonResponse(msg, status=401, safe=False)
        global otp
        otp=random.randint(1000,10000)
        send_mail(
                'OTP for registeration',
                '''Hello {name}.
                This mail is send by the company CloudBox. Your otp for sign up is {o}.
                \n\n\nThis message is generated by the server so do not reply back to it.'''.format(name=body['fname'], o=otp),
                'sudhanshu.2125it1056@kiet.edu',
                [body['mail']],
                fail_silently=False
                 )
        msg={'msg':'Success'}
        return JsonResponse(msg, status=200, safe=False)


def otpverify(request):
    if(request.method=="POST"):
        body=json.loads(request.body)
        if(body['otp']==otp):
            user=User.objects.create_user(body['user'], body['mail'], body['pass1'])
            user.first_name=body['fname']
            user.last_name=body['lname']
            user.save()
            send_mail(
                'Account Created Succesfully',
                '''Hello {name}.
                You have succesfully signed up on the cloudbox server.
                This is the confirmation mail send you by Cloudbox.
                \n\n\n
                This message is generated by the server so do not reply back to it.'''.format(name=body['fname']),
                'sudhanshu.2125it1056@kiet.edu',
                [body['mail']],
                fail_silently=False
            )
            msg={'msg':'Account created'}
            return JsonResponse(msg, status=201, safe=False)
        else:
            msg={'msg':'OTP did not matched'}
            return JsonResponse(msg, status=401, safe=False)


def log_in(request):
    if(request.method=="POST"):
        body=json.loads(request.body)
        user=authenticate(username=body['user'], password=body['pass1'])
        if(user is not None):
            login(request, user)
            print(user.id)
            request.session['id']=user.id
            msg={'msg':'Success'}
            return JsonResponse(msg, status=200, safe=False)
        else:
            msg={'msg':'Wrong credentials'}
            return JsonResponse(msg, status=401, safe=False)


def upload(request):
    if(request.method=="POST"):
        if(request.user.is_authenticated):
            body=request.FILES
            print(body.keys())
            f=body['file']
            print(f)
            doc=document(file=f)
            doc.save()
            # u=User.objects.get(id=request.user)
            # loc.objects.create(user=u, file=doc)
            msg={'msg':'success'}
            return JsonResponse(msg, status=200, safe=False)
        else:
            msg={'msg':'Unauthorized'}
            return JsonResponse(msg, safe=False, status=401)


def files(request):
    if(request.user.is_authenticated):
        doc=loc.objects.filter(user=request.user)
        d=[]
        for i in doc.file:
            x=document.objects.get(id=i)
            s={'file':x.file}
            d.append(s)
        return JsonResponse(d, status=200, safe=False)


def details(request):
    if(request.user.is_authenticated):
        user=User.objects.get(id=request.user)
        user=model_to_dict(user)
        return JsonResponse(user, status=200, safe=False)


def out(request):
    logout(request)
    msg={'msg':'Logout successfull'}
    return JsonResponse(msg, status=200, safe=False)
